% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/client.R
\docType{class}
\name{DOcplexcloudClient}
\alias{DOcplexcloudClient}
\title{The DOcplexcloud client class.}
\format{The DOcplexcloud client class.}
\usage{
DOcplexcloudClient
}
\description{
The client makes it easier to work with the
solve service by encapsulating connection parameters (connection URL, api key)
and provides support for features of DOcplexcloud solve service not tied to a
particular job, like listing
all jobs for the current user or deleting all jobs.
}
\section{Fields}{

\describe{
\item{\code{url}}{The DOcplexcloud url. If not specified, the value of environment
variable DOCPLEXCLOUD_URL is used.}

\item{\code{key}}{The DOcplexcloud api key. If not specified, the value of environment
variable DOCPLEXCLOUD_KEY is used}

\item{\code{verbose}}{If TRUE, sets the verbose mode.}
}}
\section{Methods}{

\describe{
  \item{\code{new(url, key, verbose)}}{Initialize a new client.}
  \item{\code{submitJob(..., wait=TRUE)}}{Submits a job execution.

      This method creates the job, upoads the attachments, submit an execution
      request, then wait for completion of the job, unless \code{wait} is
      \code{FALSE}.

      Returns a \code{DOcplexcloudJob}.
  }
  \item{\code{getAllJobs(...)}}{Returns all jobs for the current user.}
  \item{\code{deleteAllJobs(...)}}{Delete all jobs for the current user.}
}
}
\examples{
\dontrun{
# create a new client, using environment variables for url and api key
client <- DOcplexCloudClient$new()

# create and execute a job to solve model.lp
job <- client$submitJob(addAttachment(file="model.lp"))

# create and execute a job which model is stored
# in memory
model <- "Minimize
            obj: x + y
          Subject To
          Bounds
            3 <= x <= 17
            2 <= y
          End"
job <- client$submitJob(addAttachment(name="model.lp",
                                      data=charToRaw(model)))
}
}
\keyword{datasets}

